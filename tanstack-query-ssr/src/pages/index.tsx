import { dehydrate, QueryClient, useQuery } from "@tanstack/react-query"
import { GetServerSideProps } from "next"
import Head from "next/head"

type Todo = {
  userId: number
  id: number
  title: string
  completed: boolean
}

const fetchTodos = (): Promise<Todo[]> =>
  fetch("https://jsonplaceholder.typicode.com/todos").then((r) => r.json())

export const getServerSideProps = (async () => {
  const queryClient = new QueryClient()
  await queryClient.prefetchQuery(["todos"], fetchTodos)

  return {
    props: { dehydratedState: dehydrate(queryClient) },
  }
}) satisfies GetServerSideProps

export default function Home() {
  const { data: todos } = useQuery({
    queryKey: ["todos"],
    queryFn: fetchTodos,
  })
  return (
    <>
      <Head>
        <title>Index page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <pre>{JSON.stringify(todos, null, 2)}</pre>
    </>
  )
}
